
name: CI

on:
  push:
    tags:
    - v*
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os:
        - macos
        - ubuntu
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    steps:

    - name: Caches
      uses: actions/cache@v2
      with:
        path: ./
        key: ${{ github.repository }}/${{ matrix.os }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup authentication
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run:  |
        git config github.user "x-access-token"
        git config github.pat "${TOKEN}"
        git config --get-regexp ^github

    - name: Build with make
      run:  make -C . -j $(nproc)

    - name: Move manifests next to binaries
      run:  mv -vf *.json bin/

    - name: Archive and compress target
      run:  tar -czvf binaries.tgz -C bin .

    - name: Upload build archive
      uses: actions/upload-artifact@v2
      with:
        name: k8s-tools-${{ matrix.os }}.tgz
        path: ./binaries.tgz
        retention-days: 30
        if-no-files-found: error

  release:
    name: Do a release
    needs:
    - build
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
    - name: Create a draft release
      uses: actions/create-release@v1
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Automatic Release at ${{ github.ref }}
        prerelease: true
        draft: false

  upload:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os:
        - macos
        - ubuntu
    name: Upload assets
    needs:
    - release
    runs-on: ubuntu-latest
    steps:

    - name: Download build archive
      uses: actions/download-artifact@v2
      with:
        name: k8s-tools-${{ matrix.os }}.tgz
        path: ./

    - run: find . -ls

    - name: Upload assets for release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_name: ${{ matrix.os }}.tgz
        asset_path: ./binaries.tgz
        asset_content_type: application/x-tar
